{"version":3,"sources":["webpack://backend/webpack/bootstrap","webpack://backend/./backend/src/model/progress.js","webpack://backend/./backend/src/main.js","webpack://backend/./backend/src/config/config.js","webpack://backend/./backend/src/config/locales.js","webpack://backend/./backend/src/config/locale/zh-cn.js","webpack://backend/./backend/src/config/errors.js","webpack://backend/./backend/src/config/middlewares.js","webpack://backend/./backend/src/config/middleware/progress.js","webpack://backend/./backend/src/config/middleware/adapter/progress.js","webpack://backend/external \"require3\"","webpack://backend/./backend/src/routes.js","webpack://backend/./backend/src/controller/version.js","webpack://backend/./backend/src/controller/progress.js","webpack://backend/./backend/src/services.js","webpack://backend/./backend/src/service/version.js","webpack://backend/./backend/src/service/progress.js","webpack://backend/./backend/src/models.js","webpack://backend/./backend/src/meta.js","webpack://backend/./backend/src/config/validation/schemas.js"],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;AClFA;AACA;AACA;AACA,kBAAkB,+BAA+B,uBAAuB,EAAE;AAC1E;AACA;AACA;AACA;;;;;;;ACPA,eAAe,mBAAO,CAAC,CAAoB;AAC3C,gBAAgB,mBAAO,CAAC,CAAqB;AAC7C,eAAe,mBAAO,CAAC,CAAoB;AAC3C,oBAAoB,mBAAO,CAAC,CAAyB;;AAErD;;AAEA;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,mBAAmB,mBAAO,CAAC,EAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,EAAa;AACtC;AACA,eAAe,mBAAO,CAAC,EAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClBA;AACA,WAAW,mBAAO,CAAC,CAAmB;AACtC;;;;;;;ACFA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;ACHA,iBAAiB,mBAAO,CAAC,CAA0B;;AAEnD;AACA;AACA;;;;;;;ACJA;AACA,mBAAmB,mBAAO,CAAC,CAAuB;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,CAAU;AACnC;;AAEA,wBAAwB,mBAAO,CAAC,CAA4B;;AAE5D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA;;AAEA,kBAAkB,oDAAoD;AACtE,iDAAiD,aAAa;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,uCAAuC,qEAAqE;AAC5G;;AAEA,gBAAgB,sBAAsB;AACtC,iDAAiD,aAAa;AAC9D;AACA,oBAAoB;AACpB;AACA,uCAAuC,8EAA8E;AACrH;;AAEA,iBAAiB,sBAAsB;AACvC,iDAAiD,aAAa;AAC9D;AACA,oBAAoB;AACpB;AACA,uCAAuC,+EAA+E;AACtH;;;AAGA;AACA;AACA;;;;;;;AClEA,qC;;;;;;ACAA,gBAAgB,mBAAO,CAAC,EAAyB;AACjD,iBAAiB,mBAAO,CAAC,EAA0B;;AAEnD;AACA;AACA;AACA,KAAK,oFAAoF;AACzF,KAAK,kFAAkF;AACvF,KAAK,iFAAiF;AACtF;AACA,KAAK,+DAA+D;AACpE,KAAK,+DAA+D;AACpE;AACA;AACA;;;;;;;ACdA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;ACpBA,gBAAgB,mBAAO,CAAC,EAAsB;AAC9C,iBAAiB,mBAAO,CAAC,EAAuB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACnCA;;AAEA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACzCA,iBAAiB,mBAAO,CAAC,CAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA,kBAAkB,mBAAO,CAAC,EAAgC;AAC1D;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = app => {\n  class Progress extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aProgress', options: { disableDeleted: true } });\n    }\n  }\n  return Progress;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst middlewares = require('./config/middlewares.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    middlewares,\n    meta,\n  };\n\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {\n    progress: {\n      global: false,\n      dependencies: 'instance',\n    },\n  };\n\n  // check\n  config.check = {\n    timeoutDelay: 5000,\n  };\n\n  return config;\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = {\n  'Operation Aborted': '操作已中止',\n};\n","// error code should start from 1001\nmodule.exports = {\n  1001: 'Operation Aborted',\n};\n","const progress = require('./middleware/progress.js');\n\nmodule.exports = {\n  progress,\n};\n","// progress\nconst ProgressFn = require('./adapter/progress.js');\nconst PROGRESS = Symbol('CTX#__PROGRESS');\n\nmodule.exports = () => {\n  return async function progress(ctx, next) {\n    ctx.meta = ctx.meta || {};\n    // progress\n    Object.defineProperty(ctx.meta, 'progress', {\n      get() {\n        if (ctx.meta[PROGRESS] === undefined) {\n          ctx.meta[PROGRESS] = new (ProgressFn(ctx))();\n        }\n        return ctx.meta[PROGRESS];\n      },\n    });\n\n    // next\n    await next();\n  };\n};\n","const require3 = require('require3');\nconst uuid = require3('uuid');\n\nconst modelProgressFn = require('../../../model/progress.js');\n\nconst Fn = module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Progress {\n\n    constructor(moduleName) {\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n      this._modelProgress = null;\n    }\n\n    // other module's progress\n    module(moduleName) {\n      return new (Fn(ctx))(moduleName);\n    }\n\n    get modelProgress() {\n      if (!this._modelProgress) this._modelProgress = new (modelProgressFn(ctx.app))(ctx);\n      return this._modelProgress;\n    }\n\n    async create() {\n      const progressId = uuid.v4().replace(/-/g, '');\n      await this.modelProgress.insert({ progressId });\n      return progressId;\n    }\n\n    async update({ progressId, progressNo = 0, total, progress, text }) {\n      const item = await this.modelProgress.get({ progressId });\n      // abort\n      if (item.abort) {\n        // 1001: 'Operation Aborted',\n        ctx.throw.module(moduleInfo.relativeName, 1001);\n      }\n      // data\n      const data = item.data ? JSON.parse(item.data) : [];\n      if (data.length > progressNo + 1) {\n        data.splice(progressNo + 1, data.length - progressNo - 1);\n      }\n      data[progressNo] = { total, progress, text };\n      // update\n      await this.modelProgress.update({ id: item.id, counter: item.counter + 1, data: JSON.stringify(data) });\n    }\n\n    async done({ progressId, message }) {\n      const item = await this.modelProgress.get({ progressId });\n      // data\n      const data = { message };\n      // update\n      await this.modelProgress.update({ id: item.id, counter: item.counter + 1, done: 1, data: JSON.stringify(data) });\n    }\n\n    async error({ progressId, message }) {\n      const item = await this.modelProgress.get({ progressId });\n      // data\n      const data = { message };\n      // update\n      await this.modelProgress.update({ id: item.id, counter: item.counter + 1, done: -1, data: JSON.stringify(data) });\n    }\n\n\n  }\n  return Progress;\n};\n","module.exports = require(\"require3\");","const version = require('./controller/version.js');\nconst progress = require('./controller/progress.js');\n\nmodule.exports = app => {\n  const routes = [\n    // version\n    { method: 'post', path: 'version/update', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/init', controller: version, middlewares: 'inner' },\n    { method: 'post', path: 'version/test', controller: version, middlewares: 'test' },\n    // progress\n    { method: 'post', path: 'progress/check', controller: progress },\n    { method: 'post', path: 'progress/abort', controller: progress },\n  ];\n  return routes;\n};\n","module.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async init() {\n      await this.service.version.init(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n    async test() {\n      await this.service.version.test(this.ctx.request.body);\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n","module.exports = app => {\n  class ProgressController extends app.Controller {\n\n    async check() {\n      const res = await this.service.progress.check({\n        progressId: this.ctx.request.body.progressId,\n        counter: this.ctx.request.body.counter,\n      });\n      this.ctx.success(res);\n    }\n\n    async abort() {\n      await this.service.progress.abort({\n        progressId: this.ctx.request.body.progressId,\n      });\n      this.ctx.success();\n    }\n\n  }\n  return ProgressController;\n};\n","const version = require('./service/version.js');\nconst progress = require('./service/progress.js');\n\nmodule.exports = app => {\n  const services = {\n    version,\n    progress,\n  };\n  return services;\n};\n","module.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(options) {\n      if (options.version === 1) {\n        // aProgress\n        const sql = `\n        CREATE TABLE aProgress (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            progressId varchar(50) DEFAULT NULL,\n            counter int(11) DEFAULT '0',\n            done int(11) DEFAULT '0',\n            abort int(11) DEFAULT '0',\n            data text DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n                  `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","module.exports = app => {\n\n  class Progress extends app.Service {\n\n    async check({ progressId, counter }) {\n      // loop\n      const timeStart = new Date();\n      while (true) {\n        // item\n        const item = await this.ctx.model.queryOne(`\n        select * from aProgress a\n          where a.iid=? and a.progressId=? and a.counter>?\n        `, [ this.ctx.instance.id, progressId, counter ]);\n        // delete\n        if (item && item.done !== 0) {\n          await this.ctx.model.progress.delete({ id: item.id });\n        }\n        // return if found\n        if (item) return item;\n        // check the delayTimeout if the same\n        const timeEnd = new Date();\n        const time = (timeEnd.valueOf() - timeStart.valueOf());\n        if (time >= this.ctx.config.check.timeoutDelay) {\n          // timeout\n          return null;\n        }\n        // sleep 1s then continue\n        await this.ctx.meta.util.sleep(1000);\n      }\n    }\n\n    async abort({ progressId }) {\n      await this.ctx.model.query(`\n        update aProgress set abort=1\n          where iid=? and progressId=?\n        `, [ this.ctx.instance.id, progressId ]);\n    }\n\n  }\n\n  return Progress;\n};\n","const progress = require('./model/progress.js');\n\nmodule.exports = app => {\n  const models = {\n    progress,\n  };\n  return models;\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      functions: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n"],"sourceRoot":""}